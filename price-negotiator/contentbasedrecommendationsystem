import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import linear_kernel

# Sample product data
data = {'product_id': [1, 2, 3],
        'description': ["High quality laptop with 16GB RAM", 
                        "Affordable smartphone with great battery life", 
                        "Wireless headphones with noise cancellation"]}

df = pd.DataFrame(data)

# Vectorize the product descriptions
tfidf = TfidfVectorizer(stop_words='english')
tfidf_matrix = tfidf.fit_transform(df['description'])

# Compute similarity matrix
cosine_sim = linear_kernel(tfidf_matrix, tfidf_matrix)

def get_recommendations(product_id, cosine_sim=cosine_sim):
    idx = df.index[df['product_id'] == product_id][0]
    sim_scores = list(enumerate(cosine_sim[idx]))
    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)
    sim_scores = sim_scores[1:4]  # get top 3 recommendations
    product_indices = [i[0] for i in sim_scores]
    return df['product_id'].iloc[product_indices]

recommended_products = get_recommendations(1)
print(f"Recommended products: {recommended_products.tolist()}")
